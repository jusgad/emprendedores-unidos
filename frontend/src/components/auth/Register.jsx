import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { Eye, EyeOff, Mail, Lock, User, AlertCircle, CheckCircle } from 'lucide-react';\nimport toast from 'react-hot-toast';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    rol: 'comprador',\n    telefono: '',\n    direccion: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const { register, loading, error, clearError } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (error) clearError();\n  };\n\n  const validateForm = () => {\n    if (formData.password !== formData.confirmPassword) {\n      toast.error('Las contraseñas no coinciden');\n      return false;\n    }\n    if (formData.password.length < 6) {\n      toast.error('La contraseña debe tener al menos 6 caracteres');\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    try {\n      const { confirmPassword, ...registerData } = formData;\n      await register(registerData);\n      toast.success('¡Cuenta creada exitosamente! Bienvenido a Emprendedores Unidos');\n      navigate('/');\n    } catch (error) {\n      toast.error(error.response?.data?.error || 'Error al crear la cuenta');\n    }\n  };\n\n  const getPasswordStrength = () => {\n    const password = formData.password;\n    if (password.length === 0) return { strength: 0, text: '', color: '' };\n    if (password.length < 6) return { strength: 1, text: 'Débil', color: 'text-red-500' };\n    if (password.length < 8) return { strength: 2, text: 'Regular', color: 'text-yellow-500' };\n    if (password.length >= 8 && /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(password)) {\n      return { strength: 4, text: 'Muy fuerte', color: 'text-green-500' };\n    }\n    return { strength: 3, text: 'Fuerte', color: 'text-blue-500' };\n  };\n\n  const passwordStrength = getPasswordStrength();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n            Crear Cuenta\n          </h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            ¿Ya tienes cuenta?{' '}\n            <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              Inicia sesión aquí\n            </Link>\n          </p>\n        </div>\n\n        <div className=\"bg-white py-8 px-6 shadow-lg rounded-xl\">\n          {error && (\n            <div className=\"mb-4 bg-red-50 border border-red-200 rounded-md p-4\">\n              <div className=\"flex items-center\">\n                <AlertCircle className=\"h-5 w-5 text-red-400 mr-2\" />\n                <span className=\"text-sm text-red-800\">{error}</span>\n              </div>\n            </div>\n          )}\n\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"nombre\" className=\"block text-sm font-medium text-gray-700\">\n                Nombre completo *\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"nombre\"\n                  name=\"nombre\"\n                  type=\"text\"\n                  required\n                  value={formData.nombre}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-2 pl-10 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"Tu nombre completo\"\n                />\n                <User className=\"h-5 w-5 text-gray-400 absolute left-3 top-2.5\" />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email *\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={formData.email}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-2 pl-10 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"tu@email.com\"\n                />\n                <Mail className=\"h-5 w-5 text-gray-400 absolute left-3 top-2.5\" />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"rol\" className=\"block text-sm font-medium text-gray-700\">\n                Tipo de cuenta *\n              </label>\n              <select\n                id=\"rol\"\n                name=\"rol\"\n                value={formData.rol}\n                onChange={handleChange}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              >\n                <option value=\"comprador\">Comprador - Quiero comprar productos</option>\n                <option value=\"vendedor\">Vendedor - Quiero vender mis productos</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Contraseña *\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  required\n                  value={formData.password}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-2 pl-10 pr-10 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"Mínimo 6 caracteres\"\n                />\n                <Lock className=\"h-5 w-5 text-gray-400 absolute left-3 top-2.5\" />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                  )}\n                </button>\n              </div>\n              {formData.password && (\n                <div className=\"mt-2\">\n                  <div className=\"flex items-center justify-between text-xs\">\n                    <span className={passwordStrength.color}>\n                      Seguridad: {passwordStrength.text}\n                    </span>\n                  </div>\n                  <div className=\"mt-1 w-full bg-gray-200 rounded-full h-1\">\n                    <div \n                      className={`h-1 rounded-full transition-all duration-300 ${\n                        passwordStrength.strength === 1 ? 'bg-red-500 w-1/4' :\n                        passwordStrength.strength === 2 ? 'bg-yellow-500 w-2/4' :\n                        passwordStrength.strength === 3 ? 'bg-blue-500 w-3/4' :\n                        passwordStrength.strength === 4 ? 'bg-green-500 w-full' : 'w-0'\n                      }`}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirmar contraseña *\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  required\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  className=\"appearance-none block w-full px-3 py-2 pl-10 pr-10 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"Repite tu contraseña\"\n                />\n                <Lock className=\"h-5 w-5 text-gray-400 absolute left-3 top-2.5\" />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-gray-400 hover:text-gray-600\" />\n                  )}\n                </button>\n                {formData.confirmPassword && formData.password && (\n                  <div className=\"absolute -right-8 top-2.5\">\n                    {formData.password === formData.confirmPassword ? (\n                      <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                    ) : (\n                      <AlertCircle className=\"h-5 w-5 text-red-500\" />\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 gap-4\">\n              <div>\n                <label htmlFor=\"telefono\" className=\"block text-sm font-medium text-gray-700\">\n                  Teléfono (opcional)\n                </label>\n                <input\n                  id=\"telefono\"\n                  name=\"telefono\"\n                  type=\"tel\"\n                  value={formData.telefono}\n                  onChange={handleChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"(+57) 300 123 4567\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"direccion\" className=\"block text-sm font-medium text-gray-700\">\n                  Dirección (opcional)\n                </label>\n                <input\n                  id=\"direccion\"\n                  name=\"direccion\"\n                  type=\"text\"\n                  value={formData.direccion}\n                  onChange={handleChange}\n                  className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n                  placeholder=\"Tu dirección\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? (\n                  <div className=\"flex items-center\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Creando cuenta...\n                  </div>\n                ) : (\n                  'Crear Cuenta'\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;